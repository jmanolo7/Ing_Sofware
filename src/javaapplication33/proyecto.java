

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication33;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.naming.spi.DirStateFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author johan
 */
public class proyecto extends javax.swing.JFrame {

    /**
     * Creates new form proyecto
     */
    private String url = "jdbc:sqlserver://JOHAN-PC\\MANUEL:1433;databaseName=Arma_Tu_Equipo";
    public String bd = "Arma_Tu_Equipo";
    public String login = "nuevapru";
    public String pw = "azul13";
    public Connection conex = null;
    public String consulta_equipo= "select * from dbo.EQUIPO";
    public Statement st;
    public ResultSet rs;
    public ResultSetMetaData rm;
    String nombre;
    public int a[] = new int[4];
    public proyecto() {
        initComponents();
        
        cargarEquipo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        equipos = new java.awt.Label();
        equipo = new javax.swing.JComboBox();
        Guardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_equipos = new javax.swing.JTable();
        jugador = new javax.swing.JComboBox<>();
        goles = new javax.swing.JTextField();
        paradas = new javax.swing.JTextField();
        tiempo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Equipos");

        equipos.setAlignment(java.awt.Label.CENTER);
        equipos.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        equipos.setFont(new java.awt.Font("DokChampa", 0, 18)); // NOI18N
        equipos.setText("Arma tu equipo");

        equipo.setBackground(new java.awt.Color(0, 153, 204));
        equipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Equipo" }));
        equipo.setToolTipText("");
        equipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipoActionPerformed(evt);
            }
        });
        equipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                equipoKeyPressed(evt);
            }
        });

        Guardar.setText("Guardar Jugador");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        tabla_equipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla_equipos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_equiposMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_equipos);

        jugador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jugador" }));
        jugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jugadorActionPerformed(evt);
            }
        });

        jLabel1.setText("Habilidades");

        jLabel2.setText("Goles");

        jLabel3.setText("Atajadas");

        jLabel4.setText("Tiempo Jugado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(equipo, 0, 138, Short.MAX_VALUE)
                    .addComponent(Guardar, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(jugador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(equipos, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(145, 145, 145)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(68, 68, 68)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(goles, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(paradas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(equipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(equipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Guardar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paradas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)))
        );

        getAccessibleContext().setAccessibleName("equipos");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void cargarEquipo(){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conex = DriverManager.getConnection(url,login,pw);
            st = conex.createStatement();
            rs = st.executeQuery("SELECT Nombre_Equipo FROM dbo.EQUIPO");
            rm = rs.getMetaData();
            int equi = rm.getColumnCount();
            while(rs.next()){
                for(int i =1;i<= equi;i++){
                    nombre = rs.getString(i);
                    equipo.addItem(nombre);
                }
            }
            conex.close();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "sin conexion1");
            Logger.getLogger(proyecto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "sin conexion2");
            Logger.getLogger(proyecto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public String idjugador(String id){
        String idj="";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conex = DriverManager.getConnection(url,login,pw);
            st = conex.createStatement();
            rs = st.executeQuery("select Id_Jugador from dbo.JUGADOR where Nombre = " +"'"+ id + "'");
            rm = rs.getMetaData();
            int equi = rm.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            for(int i=1;i<=equi;i++){
                modelo.addColumn(rm.getColumnLabel(i));
            }
            while(rs.next()){
                String fila[] = new String[equi];
                for(int j=0;j<equi;j++){
                    fila[j]=rs.getString(j+1);
                    idj= fila[j];
                }
            }
            rs.close();
            conex.close();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "sin conexion1");
            Logger.getLogger(proyecto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "sin conexion2");
            Logger.getLogger(proyecto.class.getName()).log(Level.SEVERE, null, ex);
        }
        return idj;
    }
    
    private void equipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipoActionPerformed
        goles.setEnabled(true);paradas.setEnabled(true);tiempo.setEnabled(true);
        jugador.removeAllItems();
        int a = equipo.getSelectedIndex();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conex = DriverManager.getConnection(url,login,pw);
            st = conex.createStatement();
            rs = st.executeQuery("SELECT Nombre FROM dbo.JUGADOR where Id_Equipo =" + a);
            rm = rs.getMetaData();
            int equi = rm.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            for(int i=1;i<=equi;i++){
                modelo.addColumn(rm.getColumnLabel(i));
            }
            while(rs.next()){
                String fila[] = new String[equi];
                for(int j=0;j<equi;j++){
                    fila[j]=rs.getString(j+1);
                    modelo.addRow(fila);
                    jugador.addItem(fila[j]);
                }
            }
            tabla_equipos.setModel(modelo);
            rs.close();
            conex.close();
        } catch (ClassNotFoundException ex) {
            //JOptionPane.showMessageDialog(null, "sin conexion1");
            Logger.getLogger(proyecto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(null, "sin conexion2");
            Logger.getLogger(proyecto.class.getName()).log(Level.SEVERE, null, ex);
        }     
    }//GEN-LAST:event_equipoActionPerformed

    private void equipoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_equipoKeyPressed
        
    }//GEN-LAST:event_equipoKeyPressed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
      String evento=Guardar.getActionCommand();
      JOptionPane.showMessageDialog(null,evento);
      int cont=0;
      int col = tabla_equipos.getSelectedRow();
      String nombre_jug=(tabla_equipos.getModel().getValueAt(col,0).toString());
      int time=(Integer.parseInt(tiempo.getText()));
      if(evento.equalsIgnoreCase("Guardar Jugador")){
          a[cont]=time;
          JOptionPane.showMessageDialog(null,a[cont]);          
      } else{
          JOptionPane.showMessageDialog(null,a[cont] + "paila");          
      }   
      
    }//GEN-LAST:event_GuardarActionPerformed

    private void jugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jugadorActionPerformed
        String seleccionado=(String)jugador.getSelectedItem();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conex = DriverManager.getConnection(url,login,pw);
            st = conex.createStatement();
            rs = st.executeQuery("SELECT Nombre FROM dbo.JUGADOR where Id_Equipo =" + seleccionado);
            rm = rs.getMetaData();
            int equi = rm.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            for(int i=1;i<=equi;i++){
                modelo.addColumn(rm.getColumnLabel(i));
            }
            while(rs.next()){
                String fila[] = new String[equi];
                for(int j=0;j<equi;j++){
                    fila[j]=rs.getString(j+1);
                    modelo.addRow(fila);
                    jugador.addItem(fila[j]);
                }
            }
            tabla_equipos.setModel(modelo);
            rs.close();
            conex.close();
        } catch (ClassNotFoundException ex) {
            //JOptionPane.showMessageDialog(null, "sin conexion1");
            Logger.getLogger(proyecto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(null, "sin conexion2");
            Logger.getLogger(proyecto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jugadorActionPerformed

    private void tabla_equiposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_equiposMouseClicked
        goles.setText("");paradas.setText("");tiempo.setText("");
        int col = tabla_equipos.getSelectedRow();
        String nombre_jug=(tabla_equipos.getModel().getValueAt(col,0).toString());
        col = (Integer.parseInt(idjugador(nombre_jug)));
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conex = DriverManager.getConnection(url,login,pw);
            st = conex.createStatement();
            rs = st.executeQuery("select Goles_Anotados,Paradas,Tiempo_Jugado from dbo.HABILIDADES where Id_Habilidad = " + col);
            rm = rs.getMetaData();
            int equi = rm.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            for(int i=1;i<=equi;i++){
                modelo.addColumn(rm.getColumnLabel(i));
            }
            while(rs.next()){
                String fila[] = new String[equi];
                for(int j=0;j<equi;j++){
                    fila[j]=rs.getString(j+1);
                    if (j==0){
                        goles.setText(fila[j]);
                    }
                    if (j==1){
                        paradas.setText(fila[j]);
                    }
                    if (j==2){
                        tiempo.setText(fila[j]);
                    }
                }
            }
            rs.close();
            conex.close();
        } catch (ClassNotFoundException ex) {
            //JOptionPane.showMessageDialog(null, "sin conexion1");
            Logger.getLogger(proyecto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(null, "sin conexion2");
            Logger.getLogger(proyecto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabla_equiposMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new proyecto().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Guardar;
    private javax.swing.JComboBox equipo;
    private java.awt.Label equipos;
    private javax.swing.JTextField goles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jugador;
    private javax.swing.JTextField paradas;
    private javax.swing.JTable tabla_equipos;
    private javax.swing.JTextField tiempo;
    // End of variables declaration//GEN-END:variables
}
